package com.filecloud.api.service;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.filecloud.api.model.FileItem;
import com.filecloud.api.repository.FileItemRepository;


import org.springframework.util.StringUtils;

@Service
public class FileItemSrevice {
	@Autowired
	private FileItemRepository fileItemRepository;
	public void createFileItem(String fileName,String fileType,MultipartFile fileUrl)throws IOException {
		 Path uploadDir = Paths.get("mediafile");
	        if (!Files.exists(uploadDir)) {
	            Files.createDirectories(uploadDir);
	        }
	        
	        String cleanedFileName = StringUtils.cleanPath(fileUrl.getOriginalFilename());
	        Path filePath = uploadDir.resolve(cleanedFileName);

	        try (InputStream inputStream = fileUrl.getInputStream()) {
	            Files.copy(inputStream, filePath, StandardCopyOption.REPLACE_EXISTING);
	        } catch (Exception e) {
	            throw new IOException("Error saving: " + cleanedFileName, e);
	        }
	        String fileUrlString = filePath.toString().replace(File.separatorChar, '/');

	        FileItem fileItem = new FileItem();
	        fileItem.setFileName(cleanedFileName);
	        fileItem.setFileType(fileType);
	        fileItem.setFileUrl("/" + fileUrlString);

	        int result = fileItemRepository.addFileItem(fileItem);
	        if (result != 1) {
	            throw new RuntimeException("Failed to insert file item into database.");
	        }
		}

		
		//fileItem.setFileUrl(fileUrl);
        // 將文件上傳到指定目錄
//		 String originalFileName = fileUrl.getOriginalFilename();
//	     File dest = new File(uploadDir + "/" + originalFileName);
//	     fileUrl.transferTo(dest);
//        // 將檔案路徑存至資料庫
//	     fileItem.setFileUrl(dest.getAbsolutePath());
//	     int result = fileItemRepository.addFileItem(fileItem);
//	     if (result != 1) {
//	            throw new RuntimeException("Failed to insert file item into database.");
//	        }

	public List<FileItem> getALL(){
		return fileItemRepository.getALL();
	}
	public void deleteItem(Integer id) {
		fileItemRepository.deleteItem(id);
	}
	public void updateFileName(Integer id,String fileName) {
		fileItemRepository.updateFileName(id,fileName);
		
	}
	public List<FileItem> getFileName(Integer id){
		return fileItemRepository.getFileName(id);
	}

	public FileItem getFileItemByName(String fileName) {
        return fileItemRepository.findFileItemByName(fileName);
    }
}
