package com.filecloud.api.controller;

import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.filecloud.api.model.FileItem;
import com.filecloud.api.service.FileItemService;


@RestController
@RequestMapping("/fileapi")
public class WEBController {
	@Autowired
	private FileItemService fileItemService;
	 /*
	  @PostMapping("/createfile")
	    public void addFileItem(@RequestParam("fileName") String fileName, 
	    						@RequestParam("fileType") String fileType, 
	    						@RequestParam("fileUrl") MultipartFile fileUrl) throws IOException {
		  fileItemService.createFileItem(fileName, fileType, fileUrl);
	    }  
	 */
	  @PostMapping("/createfile")
	  public ResponseEntity<String> addFileItem(@RequestParam("fileName") String fileName, 
												@RequestParam("fileType") String fileType, 
												@RequestParam("fileUrl") MultipartFile fileUrl) throws IOException{
		 fileItemService.createFileItem(fileName, fileType, fileUrl);
		  return  ResponseEntity.status(HttpStatus.CREATED).body("File created successfully");
	  }
	  /*
	  @GetMapping("/getall")
	  	public List<FileItem> getALLList(){
		  return fileItemService.getAll();
	  }
	  */
	  @GetMapping("/getall")
	  public ResponseEntity<List<FileItem>> getALLList(){
		  fileItemService.getAll();
		  return  ResponseEntity.status(HttpStatus.OK);
	  }
	  @DeleteMapping("/deleteitem/{id}")
	  	public void deleteItem(@PathVariable Integer id) {
		  fileItemService.deleteItem(id);
	  } 
	  @PutMapping("/update/{id}")
		public void updateFileName(@PathVariable Integer id,
								   @RequestParam("fileName") String fileName) {
		  fileItemService.updateFileName(id,fileName);
	  }
	  /*
	  @GetMapping("/getfilename/{id}")
	   	public List<FileItem> getFileName(@PathVariable Integer id){
		  return fileItemSrevice.getFileItemById(id);
	  }
	  */
	  @GetMapping("/downloadFile/{fileResource}")
	    public ResponseEntity<?> downloadFile(@PathVariable("fileResource") String fileResource) {
	        Resource resource = null;
	        try {
	            resource = fileItemService.getFileResource(fileResource);
	        } catch (IOException e) {
	            return ResponseEntity.internalServerError().build();
	        }
	         
	        if (resource == null) {
	            return new ResponseEntity<>("File not found", HttpStatus.NOT_FOUND);
	        }
	         
	        String contentType = "application/octet-stream";
	        String headerValue = "attachment; filename=\"" + resource.getFilename() + "\"";
	         
	        return ResponseEntity.ok()
	                .contentType(MediaType.parseMediaType(contentType))
	                .header(HttpHeaders.CONTENT_DISPOSITION, headerValue)
	                .body(resource);       
	  }

}
